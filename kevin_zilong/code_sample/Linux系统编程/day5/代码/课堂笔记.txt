export arg=100
getenv(arg);
time ./a.out

启动一个终端(shell)会自动创建一个session，会话的ID就是这个shell的ID
在shell上启动的程序，或者说使用fork创建出来的子进程,默认加入到父进程的会话中
当session leader退出时，会话中的所有进程全部退出
如果不想终端关闭程序退出，可以在程序中创建新的会话，让程序自己成为session leader，注意：只有组员能创建新会话

进程组：
当一个程序启动，自动创建一个进程组，组ID就是这个进程的ID，如果这个进程调用fork函数创建子进程，那么子进程默认加入到父进程的组中

会话和进程组的区别：
会话的作用是来关闭所有会话中进程
进程组：组长退出组员不受影响


屏蔽和忽略:
屏蔽：信号仍然能被接收并且保留，但是不做处理，当取消屏蔽后，再拿出来做处理
忽略：信号接收到不保留，直接丢弃不处理，当取消忽略后，不能再处理忽略期间接收的信号


发送信号的方式：
快捷键ctrl+c
命令 kill 信号编号 进程编号
kill(进程编号，信号）


信号的接收方式：
默认方式
signal(信号，处理函数）;
忽略信号: signal(信号，SIG_IGN);

可靠信号和不可靠信号的区别：
不可靠信号：在屏蔽期间无论发送多少次相同信号，只保留最后一次，在取消屏蔽后只执行一次
可靠信号：在屏蔽期间发送多少次信号，都会被加入到队列中保存，在取消屏蔽后一一执行